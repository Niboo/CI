name: Docker Image CI
on:
  push:
    branches: # Runs on push for following branches
      - main
      - master
      - develop
      - "1[0-9].0"  # Matches 10.0, 11.0, ..., 19.0
      - "2[0-9].0"  # Matches 20.0, 21.0, ..., 29.0
  pull_request:  # Runs on all pull requests

jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Check if Dockerfile exists
      id: check_file
      run: |
        if [ -f "Dockerfile" ]; then
          echo "Dockerfile found."
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "Dockerfile not found. Cloning another repo."
          echo "exists=false" >> $GITHUB_ENV
        fi

    - name: Clone Dockerfile repo if missing
      if: env.exists == 'false'
      run: |
        git clone https://git:${{ secrets.BUILDER }}@github.com/Niboo/CI.git temp_docker
        cp temp_docker/Dockerfile ./
        rm -rf temp_docker

    - name: Set Odoo Version
      run: echo "ODOO_VERSION=17.0" >> $GITHUB_ENV

    - name: Set Odoo Edition
      run: echo "ODOO_EDITION=odoo-enterprise" >> $GITHUB_ENV

    - name: Extract Repository Name
      run: echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV

    - name: Set Image Tag
      run: echo "IMAGE_TAG=${REPO_NAME}:${{ github.ref_name }}" >> $GITHUB_ENV
     
    - name: Build the Docker image
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        GITHUB_REGISTRY: ${{ github.repository }}
        GIT_BRANCH_TAG: ${{ github.repository }}
      run: |
        docker build \
          --build-arg ADDONS_TAG=$GIT_BRANCH_TAG \
          --build-arg GITHUB_TOKEN=${{ secrets.BUILDER }} \
          --build-arg ODOO_VERSION=${ODOO_VERSION} \
          --build-arg ODOO_EDITION=${ODOO_EDITION} \
          -t ${IMAGE_TAG} .
        docker tag ${IMAGE_TAG} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/niboo/registry:${IMAGE_TAG}
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/niboo/registry:${IMAGE_TAG}
